[comment(1)]
args = text
definition = ""
iseval = 1

[construct_rooted_acyclic_directed_subgraph(3)]
args = directed_graph_lookup, root_node, max_depth
definition = where source=$root_node$\
| eval depth=0\
`construct_rooted_acyclic_directed_subgraph_helper($directed_graph_lookup$, 1, $max_depth$)`\
| dedup source destination\
| table depth source destination
errormsg = max_depth should be greater than 0 and smaller than 100
iseval = 0
validation = max_depth>0 AND max_depth<100

[construct_rooted_acyclic_directed_subgraph_helper(3)]
args = directed_graph_lookup, depth, max_depth
definition = "| appendpipe\
    [| where depth=".($depth$-1)."\
    | lookup $directed_graph_lookup$ source as destination OUTPUT source destination\
    | where !isnull(source)\
    | mvexpand destination\
    | eval source=mvindex(source, 0)\
    | eval depth=$depth$\
]".\
if($depth$<$max_depth$,"`construct_rooted_acyclic_directed_subgraph_helper($directed_graph_lookup$, ".($depth$+1).", $max_depth$)`","")
iseval = 1

[unescape_simplexml(1)]
args = field_name
definition = | eval "$field_name$" = replace(replace(replace(replace(replace('$field_name$', "&lt;", "<"), "&gt;", ">"), "&quot;", "\""), "&amp;", "&"), "&apos;", "'")
iseval = 0

[unescape_spl(1)]
args = field_name
definition = | eval "$field_name$" = replace('$field_name$',"\\\\(\\\\|\")","\1")
iseval = 0

[expand_references]
definition = | eval reference=mvdedup(mvappend(ref_1,ref_2,ref_3,ref_4,ref_5,ref_6,ref_7,ref_8,ref_9))\
| fields - ref_*\
| where !isnull(reference)\
| mvexpand reference\
| dedup fqn reference
iseval = 0

[parse_simplexml_reference]
definition = `comment("Lookup fqn of referenced title and app")`\
| rex field=reference "ref *= *([\"'])(?<ref_title>.+?)\1"\
| rex field=reference "app *= *([\"'])(?<ref_app>.+?)\1"\
`unescape_simplexml("ref_title")`\
| eval ref_app = coalesce(ref_app,app)\
| dedup fqn ref_app ref_title
iseval = 0

[regex_spl_param_value(2)]
args = r1, r2
definition = "(\"(?<ref_$r1$>([^\\\\\"]|\\\\.)*)\"|(?<ref_$r2$>[^|\"',\[\]= \r\n]+))([|\"',\[\] \r\n]|$)"
iseval = 0

[lookup_ko_fqn_from_title(1)]
args = ko_lookup
definition = `comment("Lookup private ko of owner in current app")`\
| eval ref_sharing="user"\
| lookup $ko_lookup$ title as reference, sharing as ref_sharing, owner, app OUTPUT fqn as new_private_ref_fqn\
\
`comment("Lookup ko first in current app, then globally")`\
| eval ref_sharing="app" \
| lookup $ko_lookup$ title as reference, sharing as ref_sharing, app OUTPUT fqn as new_ref_fqn \
| eval ref_sharing="global" \
| lookup $ko_lookup$ title as reference, sharing as ref_sharing, app OUTPUTNEW fqn as new_ref_fqn \
| lookup $ko_lookup$ title as reference, sharing as ref_sharing OUTPUTNEW fqn as new_ref_fqn \
\
`comment("Private KO refs are only allowed from private KOs")`\
| eval new_ref_fqn=if(sharing="user", coalesce(new_private_ref_fqn,new_ref_fqn), new_ref_fqn)\
\
| eval ref_fqn=if(!isnull(ref_fqn) and !like(ref_fqn,"BROKEN REFERENCE:%"), ref_fqn,  coalesce(new_ref_fqn, "BROKEN REFERENCE: ".reference))\
| fields - ref_sharing new_*\

iseval = 0

[lookup_ko_fqn_from_title_and_app(1)]
args = ko_lookup
definition = `comment("Lookup KO for each sharing permission")`\
| eval ref_sharing="user"\
| lookup $ko_lookup$ sharing as ref_sharing, title as ref_title, app as ref_app OUTPUT fqn as private_ref_fqn\
| eval ref_sharing="app"\
| lookup $ko_lookup$ sharing as ref_sharing, title as ref_title, app as ref_app OUTPUT fqn as app_ref_fqn\
| eval ref_sharing="global"\
| lookup $ko_lookup$ sharing as ref_sharing, title as ref_title, app as ref_app OUTPUT fqn as global_ref_fqn\
`comment("Private KO refs are only allowed from private KOs & app shared KO refs are only valid within app")`\
\
`comment("Private KO refs are only allowed from private KOs & app shared KOs can't be referenced from other apps")`\
| eval ref_fqn=coalesce(if(sharing="user" and !isnull(private_ref_fqn), private_ref_fqn, if(app=ref_app and !isnull(app_ref_fqn), app_ref_fqn, global_ref_fqn)), "BROKEN REFERENCE: ".reference)\
\
| fields - reference *_ref_fqn *sharing *owner *app *title
iseval = 0
